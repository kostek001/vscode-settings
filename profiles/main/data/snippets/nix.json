{
  // Place your snippets for nix here. Each snippet is defined under a snippet name and has a prefix, body and 
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "nix-shell mkShell": {
    "prefix": "nix-shell mkShell",
    "body": [
      "{ pkgs ? import <nixpkgs> { } }:",
      "pkgs.mkShell {",
      "  packages = with pkgs; [",
      "    $0",
      "  ];",
      "}"
    ],
    "description": "Create blank mkShell for nix-shell"
  },

  "Blank module": {
    "prefix": "Blank module",
    "body": [
		"{ config, pkgs, lib, ... }:",
		"with lib;",
		"",
		"let",
		"  cfg = config.$1;",
		"in",
		"{",
		"  options.$1 = {",
		"    enable = mkEnableOption \"$2\";",
		"  };",
		"",
		"  config = mkIf cfg.enable {",
		"    $0",
		"  };",
		"}",
		""
	],
    "description": "Create blank NixOS module"
  }
}